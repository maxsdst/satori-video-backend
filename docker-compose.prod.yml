name: satori-video-backend-prod

services:
  backend:
    build:
      context: .
      args:
        PROD_MODE: true
    env_file: /env/backend.env
    environment:
      DJANGO_SETTINGS_MODULE: satori_video.settings.prod
      DATABASE_URL_FILE: /run/secrets/database_url
      REDIS_URL_FILE: /run/secrets/redis_url
      SECRET_KEY_FILE: /run/secrets/secret_key
      GORSE_API_KEY_FILE: /run/secrets/gorse_api_key
      S3_SECRET_KEY_FILE: /run/secrets/s3_secret_key
    command: ./scripts/docker-entrypoint-prod.sh
    ports:
      - 80:8000
    restart: always
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "0.0.0.0", "8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
      start_interval: 1s
    secrets:
      - database_url
      - redis_url
      - secret_key
      - gorse_api_key
      - s3_secret_key

  celery:
    build:
      context: .
      args:
        PROD_MODE: true
    env_file: /env/backend.env
    environment:
      DJANGO_SETTINGS_MODULE: satori_video.settings.prod
      DATABASE_URL_FILE: /run/secrets/database_url
      REDIS_URL_FILE: /run/secrets/redis_url
      SECRET_KEY_FILE: /run/secrets/secret_key
      GORSE_API_KEY_FILE: /run/secrets/gorse_api_key
      S3_SECRET_KEY_FILE: /run/secrets/s3_secret_key
    command: celery -A satori_video worker --loglevel=info
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    secrets:
      - database_url
      - redis_url
      - secret_key
      - gorse_api_key
      - s3_secret_key

  celery_beat:
    build:
      context: .
      args:
        PROD_MODE: true
    env_file: /env/backend.env
    environment:
      DJANGO_SETTINGS_MODULE: satori_video.settings.prod
      DATABASE_URL_FILE: /run/secrets/database_url
      REDIS_URL_FILE: /run/secrets/redis_url
      SECRET_KEY_FILE: /run/secrets/secret_key
      GORSE_API_KEY_FILE: /run/secrets/gorse_api_key
      S3_SECRET_KEY_FILE: /run/secrets/s3_secret_key
    command: celery -A satori_video beat -s /home/app/celerybeat-schedule --loglevel=info
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    secrets:
      - database_url
      - redis_url
      - secret_key
      - gorse_api_key
      - s3_secret_key

  gorse_worker:
    image: zhenghaoz/gorse-worker
    restart: always
    ports:
      - 8089
    env_file: /env/gorse.env
    command: >
      --master-host gorse_master --master-port 8086 
      --http-host 0.0.0.0 --http-port 8089
      --log-path /var/log/gorse/worker.log 
      --cache-path /var/lib/gorse/worker_cache.data
    volumes:
      - gorse_log:/var/log/gorse
      - gorse_worker_data:/var/lib/gorse
    depends_on:
      - gorse_master

  gorse_server:
    image: zhenghaoz/gorse-server
    restart: always
    ports:
      - 8087
    env_file: /env/gorse.env
    command: >
      --master-host gorse_master --master-port 8086 
      --http-host 0.0.0.0 --http-port 8087
      --log-path /var/log/gorse/server.log 
      --cache-path /var/lib/gorse/server_cache.data
    volumes:
      - gorse_log:/var/log/gorse
      - gorse_server_data:/var/lib/gorse
    depends_on:
      - gorse_master

  gorse_master:
    image: zhenghaoz/gorse-master
    restart: always
    ports:
      - 8086
      - 8088:8088
    env_file: /env/gorse.env
    command: >
      -c /etc/gorse/config.toml
      --log-path /var/log/gorse/master.log 
      --cache-path /var/lib/gorse/master_cache.data
    volumes:
      - ./gorse/config.toml:/etc/gorse/config.toml:ro
      - gorse_log:/var/log/gorse
      - gorse_master_data:/var/lib/gorse

volumes:
  gorse_worker_data:
  gorse_server_data:
  gorse_master_data:
  gorse_log:

secrets:
  database_url:
    file: /secrets/database_url
  redis_url:
    file: /secrets/redis_url
  secret_key:
    file: /secrets/secret_key
  gorse_api_key:
    file: /secrets/gorse_api_key
  s3_secret_key:
    file: /secrets/s3_secret_key