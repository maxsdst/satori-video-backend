name: satori-video-backend-dev

services:
  backend:
    build: .
    command: ./scripts/docker-entrypoint-dev.sh
    ports:
      - 8000:8000
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "0.0.0.0", "8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
      start_interval: 1s

  postgres:
    image: postgres:16.4-alpine3.20
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/postgres_initdb:/docker-entrypoint-initdb.d
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: FireIsComing!
      POSTGRES_MULTIPLE_DATABASES: app,gorse
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      start_interval: 1s

  redis:
    image: redis:7.4.0-alpine3.20
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      start_interval: 1s

  celery:
    build: .
    command: celery -A satori_video worker --loglevel=info
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    volumes:
      - .:/app

  celery_beat:
    build: .
    command: celery -A satori_video beat -s /home/app/celerybeat-schedule --loglevel=info
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    volumes:
      - .:/app

  gorse_worker:
    image: zhenghaoz/gorse-worker
    restart: unless-stopped
    ports:
      - 8089:8089
    command: >
      --master-host gorse_master --master-port 8086 
      --http-host 0.0.0.0 --http-port 8089
      --log-path /var/log/gorse/worker.log 
      --cache-path /var/lib/gorse/worker_cache.data
    volumes:
      - gorse_log:/var/log/gorse
      - gorse_worker_data:/var/lib/gorse
    depends_on:
      - gorse_master

  gorse_server:
    image: zhenghaoz/gorse-server
    restart: unless-stopped
    ports:
      - 8087:8087
    command: >
      --master-host gorse_master --master-port 8086 
      --http-host 0.0.0.0 --http-port 8087
      --log-path /var/log/gorse/server.log 
      --cache-path /var/lib/gorse/server_cache.data
    volumes:
      - gorse_log:/var/log/gorse
      - gorse_server_data:/var/lib/gorse
    depends_on:
      - gorse_master

  gorse_master:
    image: zhenghaoz/gorse-master
    restart: unless-stopped
    ports:
      - 8086:8086
      - 8088:8088
    environment:
      GORSE_CACHE_STORE: redis://redis:6379/2
      GORSE_DATA_STORE: postgres://postgres:FireIsComing!@postgres:5432/gorse?sslmode=disable
    command: >
      -c /etc/gorse/config.toml
      --log-path /var/log/gorse/master.log 
      --cache-path /var/lib/gorse/master_cache.data
    volumes:
      - ./gorse/config.toml:/etc/gorse/config.toml:ro
      - gorse_log:/var/log/gorse
      - gorse_master_data:/var/lib/gorse
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  pgdata:
  redisdata:
  gorse_worker_data:
  gorse_server_data:
  gorse_master_data:
  gorse_log:
